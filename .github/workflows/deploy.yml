name: Deploy to EC2

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.EC2_SECRET_KEY }}
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
    steps:
      - name: set SecretKey
        run: |
          echo "$SECRET_KEY" > secret_key
          chmod 600 secret_key
      - name: stop
        run:
          ssh -oStrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} -i secret_key
          "docker stop diary_sample_app_1 && docker-compose -f Diary-Sample/Diary-Sample/docker-compose.yml down"
      - name: clean Docker Container/Image
        run:
          ssh -oStrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} -i secret_key
          "docker system prune -f"
      - name: clone
        run:
          ssh -oStrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} -i secret_key
          "rm -rf Diary-Sample && git clone https://github.com/1-system-group/Diary-Sample.git"
      - name: build
        run:
          ssh -oStrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} -i secret_key
          "docker build -f Diary-Sample/Diary-Sample/Dockerfile -t diary_sample_app_1 Diary-Sample/Diary-Sample/.."
      - name: start
        run:
          ssh -oStrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} -i secret_key
          "docker-compose -f Diary-Sample/Diary-Sample/docker-compose.yml up -d && docker run -d --name diary_sample_app_1 --network diary-sample_default -p 80:80 diary_sample_app_1"
      - name: clean build tmp image
        run:
          ssh -oStrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} -i secret_key
          "docker system prune -f"
